# Dependencies stage
FROM node:22.12.0-alpine AS deps

# Security: Update packages
RUN apk update && apk upgrade && \
    apk add --no-cache libc6-compat && \
    rm -rf /var/cache/apk/*

WORKDIR /app

COPY package*.json ./
RUN npm ci

# Builder stage
FROM node:22.12.0-alpine AS builder

WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Logging: Disable telemetry and set environment
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production

# Security: Run audit during build
RUN npm audit --audit-level moderate || true

# Build Next.js application
RUN npm run build

# --- Production stage (This is where the major changes are) ---
FROM node:22.12.0-alpine AS runner

WORKDIR /app

# Security: Update and install minimal tools
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init curl && \
    rm -rf /var/cache/apk/*

# Resource: Set memory and performance options
ENV NODE_OPTIONS="--max-old-space-size=512"
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Security: Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# === PERUBAHAN UTAMA DI SINI ===
# 1. Copy the standalone output which is a self-contained server.
# This includes a minimal node_modules and the server entrypoint.
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./

# 2. Copy the public and static folders. The standalone server needs them to be siblings.
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# We no longer need to copy package.json or next.config.js as they are bundled in the standalone output.

USER nextjs

EXPOSE 4002
ENV PORT=4002
ENV HOSTNAME="0.0.0.0"

# Resource & Monitoring: Health check
# The healthcheck remains the same and should now work.
HEALTHCHECK --interval=30s --timeout=5s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:4002/api/health || curl -f http://localhost:4002 || exit 1

# Security: Add metadata labels
LABEL maintainer="fatidaprilian" \
    security.scan="enabled" \
    version="1.0" \
    description="Vespa E-commerce Web Frontend"

# Graceful: Signal handling
ENTRYPOINT ["dumb-init", "--"]

# 3. Start the server directly. The standalone output creates a `server.js` file for this.
CMD ["node", "server.js"]
