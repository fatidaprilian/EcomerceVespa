# docker-compose.yml (untuk development lokal) - REVISI
services:
  # Layanan Backend API
  api:
    build:
      context: ./vespa-ecommerce-api
      dockerfile: Dockerfile
    command: sh -c "npm install && npm run start:dev"
    ports:
      - "3001:3001"
    volumes:
      - ./vespa-ecommerce-api:/app
    depends_on:
      - db
      - redis
    # Variabel env untuk API tetap dibaca dari .env di dalam foldernya
    # Ini menjaga agar setiap service punya konfigurasi .env sendiri
    env_file:
      - ./vespa-ecommerce-api/.env

  # Layanan Frontend Customer
  web:
    build:
      context: ./vespa-ecommerce-web
      dockerfile: Dockerfile
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    volumes:
      - ./vespa-ecommerce-web:/app
    env_file:
      - ./vespa-ecommerce-web/.env.local

  # Layanan Admin Panel
  admin:
    build:
      context: ./vespa-ecommerce-admin
      dockerfile: Dockerfile
    command: sh -c "npm install && npm run dev -- --port 3002"
    ports:
      - "3002:3002"
    volumes:
      - ./vespa-ecommerce-admin:/app
    env_file:
      - ./vespa-ecommerce-admin/.env

  # Layanan Database
  db:
    image: postgres:15-alpine
    environment:
      # Variabel ini sekarang diambil dari file .env di root
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Layanan Redis
  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} # Menambahkan password untuk redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  redis-data: