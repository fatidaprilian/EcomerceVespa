# ===================================
# Stage 1: Build the application
# ===================================
FROM node:22.12.0-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy package files first to leverage Docker cache
COPY package*.json ./

# Install ALL dependencies (including devDependencies needed for the build)
RUN npm ci --ignore-scripts

# Copy the rest of the application source code
COPY . .

# Generate Prisma Client to ensure it's available for the build
RUN npx prisma generate

# Build the application using the now-robust npm script
RUN npm run build

# After the build is complete, remove devDependencies to lighten the layer
RUN npm prune --production


# ===================================
# Stage 2: Create the final production image
# ===================================
FROM node:22.12.0-alpine AS production

# Install only essential packages for security and functionality
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init curl && \
    rm -rf /var/cache/apk/*

# Set environment for production
ENV NODE_ENV=production

# Security: Create a non-root user for running the application
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001 -G nodejs

# Set the working directory for the production stage
WORKDIR /app

# Copy the built application, Prisma files, and production node_modules from the builder stage
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nestjs:nodejs /app/prisma ./prisma
COPY --from=builder --chown=nestjs:nodejs /app/package.json ./

# Copy and grant execution permission to the entrypoint script
COPY --chown=nestjs:nodejs ./entrypoint.sh ./entrypoint.sh
RUN chmod +x ./entrypoint.sh

# Switch to the non-root user
USER nestjs

# Expose the port the application will run on
EXPOSE 4000
ENV PORT=4000

# Health check to ensure the application is running
HEALTHCHECK --interval=30s --timeout=5s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:4000 || exit 1

# Metadata labels
LABEL maintainer="fatidaprilian" \
    version="1.0" \
    description="Vespa E-commerce API"

# Set the entrypoint to our custom script
ENTRYPOINT ["./entrypoint.sh"]

# The main command to start the app, executed by the entrypoint script
CMD ["dumb-init", "--", "node", "dist/src/main"]